name: Release for tags
on:
  push:
  pull_request:
  create:
    tags:
      - v*
permissions:
  contents: write
jobs:
  build-linux:
    name: Build on Linux
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-cache-node-modules-${{ hashFiles('**/package-lock.json')
            }}
          restore-keys: |
            ${{ runner.os }}-build-cache-node-modules-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: NPM install
        run: npm install --dev
      - name: Build Electron
        run: npm run package-electron-linux
      - name: Upload electron-linux
        uses: actions/upload-artifact@v4
        with:
          path: dist/electron/teslaterm-linux.zip
          name: teslaterm-linux.zip
  build-windows:
    name: Build on Windows
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~\AppData\npm-cache
          key: ${{ runner.os }}-build-cache-node-modules-${{ hashFiles('**/package-lock.json')
            }}
          restore-keys: |
            ${{ runner.os }}-build-cache-node-modules-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: NPM install
        run: npm install --dev
      - name: Build Electron
        run: npm run package-electron-win
      - name: Upload electron-win
        uses: actions/upload-artifact@v4
        with:
          path: dist/electron/teslaterm-win.zip
          name: teslaterm-win.zip
  # TODO actually make this happen, grabbing binaries from uploaded artifacts of other builds
  create-release:
    name: Create release if required
    runs-on: ubuntu-20.04
    needs: [build-linux, build-windows]
    env:
      release: ${{ github.event_name == 'create' && startsWith(github.ref, 'refs/tags/v')}}
    steps:
      - name: Download teslaterm-windows
        uses: actions/download-artifact@v4
        with:
          name: teslaterm-win.zip
      - name: Download teslaterm-linux
        uses: actions/download-artifact@v4
        with:
          name: teslaterm-linux.zip
      - name: Create and upload release builds
        uses: softprops/action-gh-release@v1
        if: env.release == 'true'
        with:
          files: |
            teslaterm-linux.zip
            teslaterm-win.zip
